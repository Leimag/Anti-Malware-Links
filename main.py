from cpuinfo.cpuinfo import get_cpu_info
import discord
from datetime import timedelta
import re
import cpuinfo
import json
import os
import platform
import time
import random
import datetime
from datetime import datetime
import asyncio
from time import time
from discord.ext.commands.core import guild_only
import psutil
from psutil import Process, cpu_stats, virtual_memory


from discord.ext import commands

def get_links(client, message):
    with open('links.json', 'r') as f:
        links = json.load(f)

    return links[str(message.guild.id)]

ver = "1.3"


intents = discord.Intents.all()
client = commands.Bot(command_prefix="m!", case_insensitive = True, intents=intents)
client.remove_command("help")



@client.event
async def on_ready():
    print('Bot is online')


async def pr():
    await client.wait_until_ready()
    
    statuses = ["messages | m!help", f"{len(client.guilds)} servers | m!help", f"{len(set(client.get_all_members()))} users | m!help"]
    
    while not client.is_closed():
        status = random.choice(statuses)
        await client.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name=status))
        await asyncio.sleep(10)

client.loop.create_task(pr())

websites = [
'discordgiftsite.ru',
'dmarkef.com'
'grabify.link',
'bmwforum.co',
'leancoding.co',
'spottyfly.com',
'stopify.co',
'yo√ºtu.be',
'disc√∂rd.com',
'minecr√§ft.com',
'freegiftcards.co',
'dis√ßordapp.com',
's√§rahah.eu',
's√§rahah.pl',
'xda-developers.us',
'quickmessage.us',
'fortnight.space',
'fortnitechat.site',
'youshouldclick.us',
'joinmy.site',
'crabrave.pw',
'lovebird.guru',
'trulove.guru',
'dateing.club',
'otherhalf.life',
'shrekis.life',
'datasig.io',
'datauth.io',   
'headshot.monster',
'gaming-at-my.best',
'progaming.monster'
'yourmy.monster',
'screenshare.host',
'imageshare.best',
'screenshot.best',
'gamingfun.me',
'catsnthing.com',
'mypic.icu',
'catsnthings.fun',
'curiouscat.club',
]




@client.event
async def on_guild_join(guild):
    with open('links.json', 'r') as f:
        links = json.load(f)

    links[str(guild.id)] = websites

    with open('links.json', 'w') as f:
        json.dump(links, f, indent=4)


@client.event
async def on_guild_remove(guild):
    with open('links.json', 'r') as f:
        links = json.load(f)
    links.pop(str(guild.id))

    with open('links.json', 'w') as f:
        json.dump(links, f, indent=4)
    
    with open('logs.json', 'r') as f:
        logs = json.load(f)
    logs.pop(str(guild.id))

    with open('logs.json', 'w') as f:
        json.dump(logs, f, indent=4)
    


@client.event
async def on_message(msg):
    with open('links.json', 'r') as f:
        links = json.load(f)
    guild = msg.guild.id
    links = links[str(guild)]
    with open('logs.json', 'r') as f:
        logs = json.load(f)
    for word in links:
        if word in msg.content:
            if msg.author == client.user:
                return 
            else:
                try:
                    with open('logs.json') as f:
                        logs = json.load(f)
                    logs3 = logs.get(str(guild)) 
                    channel = client.get_channel(int(logs3))
                    await msg.delete()
                    em = discord.Embed()
                    em = discord.Embed(title="Anti-Malware Link", description="Someone said a blocked link!")
                    em.add_field(name=f"**Information:**", value=f"@{msg.author} said {msg.content}!", inline=True)
                    em.color = discord.Colour.red()
                    em.timestamp = datetime.utcnow()
                    await channel.send(embed=em)
                except:
                    await msg.delete()
                    channel = client.get_channel(msg.channel.id)
                    em = discord.Embed()
                    em = discord.Embed(title="Anti-Malware Link", description="Someone said a blocked link!\nPlease set your Log channel using m!help log if you do not want this popping up publicly!")
                    em.add_field(name=f"**Information:**", value=f"@{msg.author} said {msg.content}!", inline=True)
                    em.color = discord.Colour.red()
                    await channel.send(embed=em)
            



                


    await client.process_commands(msg)

@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send("You do not have the permissions to run this command!")
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("Please enter the required arguments!")
    elif isinstance(error, commands.MissingRole):
        await ctx.send("You do not have the required roles to run this command! ex: gstart needs 'Giveaways' role.")
    elif isinstance(error, commands.MemberNotFound):
        await ctx.send("Member not found, please try again!")
    elif isinstance(error, commands.CommandNotFound):
        await ctx.send("Command not found! Did you spell the command right?")
    else:
        raise error

@client.command()
async def ping(ctx):
    await ctx.send(f":ping_pong: Pong!! {round(client.latency*1000)}ms!")

@client.group(invoke_without_command=True)
async def help(ctx):
    em = discord.Embed()
    em.title = "Anti-Malware Help!"
    em.description = f"The bot prefix is ``m!``"
    em.color =  discord.Colour.green()
    em.set_thumbnail(url='https://cdn.discordapp.com/attachments/882153279654592525/897007866404274196/bruh.png')
    em.add_field(name = "‚úÖ Add:", value="``m!help add``", inline=True)
    em.add_field(name = "‚ùå Remove:", value="``m!help remove``", inline=True)
    em.add_field(name = "üìù List:", value="``m!help list``", inline=True)
    em.add_field(name = "‚öíÔ∏è Stats:", value="``m!help stats``", inline=True)
    em.set_footer(icon_url = ctx.author.avatar_url,text = f"Request by {ctx.author.name}")
    em.timestamp = datetime.utcnow()
    await ctx.send(embed = em)
    
@help.command()
async def add(ctx):
    em = discord.Embed(title = "‚úÖ Add:", description = "**Info:** Add a link to blacklist!\n **Perms:** Manage Messages", color = discord.Colour.random())
    em.add_field(name = "**Syntax:**", value = "m!add [link]")
    em.set_footer(text="[] - Required, {} - Optional")
    em.timestamp = datetime.utcnow()
    await ctx.send(embed = em)
@help.command()
async def stats(ctx):
    em = discord.Embed(title = "‚öíÔ∏è Stats:", description = "**Info:** Shows the bot's information! \n**Perms:** Nothing", color = discord.Colour.random())
    em.add_field(name = "**Syntax:**", value = "m!ping")
    em.set_footer(text="[] - Required, {} - Optional")
    em.timestamp = datetime.utcnow()
    await ctx.send(embed = em)

@help.command()
async def list(ctx):
    em = discord.Embed(title = "üìù List:", description = "**Info:** Shows the list of blocked websites for your server!\n **Perms:** Nothing", color = discord.Colour.random())
    em.add_field(name = "**Syntax:**", value = "m!list")
    em.timestamp = datetime.utcnow()
    em.set_footer(text="[] - Required, {} - Optional")
    await ctx.send(embed = em)


@help.command()
async def remove(ctx):
    em = discord.Embed(title = "‚ùå Remove:", description = "**Info:** Remove link from blacklisted\n**Perms:** Manage Messages", color = discord.Colour.random())
    em.add_field(name = "**Syntax:**", value = "m!remove [link]")
    em.set_footer(text="[] - Required, {} - Optional")
    em.timestamp = datetime.utcnow()
    await ctx.send(embed = em)


@client.command()
@commands.has_permissions(manage_messages = True)
async def add(ctx, *content):
    pattern = "[a-zA-Z0-9]+\.[a-zA-Z]"
    if(re.search(pattern, *content)):
        with open('links.json', 'r') as f:
            links = json.load(f)

        links[str(ctx.guild.id)] += content

        with open('links.json', 'w') as f:
            json.dump(links, f, indent=4)
        em = discord.Embed()
        em.description = f"Success! Added {content} to the blacklisted links!"
        em.color = discord.Colour.green()
        await ctx.send(embed=em)
    else:
        em2 = discord.Embed()
        em2.description = f"{content} is an invalid website!"
        em2.color = discord.Colour.red()
        await ctx.send(embed=em2)


@client.command()
@commands.has_permissions(manage_messages = True)
async def remove(ctx, content):
    
    with open('links.json', 'r') as f:
        links = json.load(f)

    links[str(ctx.guild.id)].remove(content)

    with open('links.json', 'w') as f:
        json.dump(links, f, indent=4)
    em = discord.Embed()
    em.description = f"Succesfully removed {content} from the blacklist!"
    em.color = discord.Colour.green()
    await ctx.send(embed=em)

@client.command()
@commands.has_permissions(manage_messages = True)
async def log(ctx, content = None):
    if content == None:
        await ctx.send("Please mention a channel ID!")
    else:
        guild = ctx.guild
        with open('logs.json', 'r') as f:
            logs = json.load(f)
        
        logs[str(guild.id)] = content

        with open('logs.json', 'w') as f:
            json.dump(logs, f, indent=4)
        

        
        em = discord.Embed()
        em.title=("**Log Information**")
        em.description=(f"Made {content} as the log channel!")
        em.color = discord.Colour.green()
        await ctx.send(embed=em)
    

    





@client.command()
async def list(ctx):
    
    with open('links.json', 'r') as f:
        links = json.load(f)

    msg = links[str(ctx.guild.id)]

    em = discord.Embed(title="List of blocked websites for your server!", description=msg)
    em.color = discord.Colour.random()
    await ctx.send(embed=em)


@client.command()
async def stats(ctx):
    proc = Process()
    with proc.oneshot():
        uptime = timedelta(seconds=time()-proc.create_time())
        uptime2 = str(uptime).split(".")[0]
        mem_total = virtual_memory().total / (1024**2)
        mem_of_total = proc.memory_percent()
        mem_usage = mem_total * (mem_of_total / 100)

    cpuname = cpuinfo.get_cpu_info()["brand_raw"]
    osname = platform.platform()
    cpucores = psutil.cpu_count(logical=False)
    cpupercent = psutil.cpu_percent()
    bruh = round(mem_usage)
    pythonVersion = platform.python_version()
    dpyVer = discord.__version__
    servercount = len(client.guilds)
    membercount = len(set(client.get_all_members()))
    em = discord.Embed()
    em.title = "**Anti-Malware Links Information**"
    em.color = discord.Colour.random()
    em.set_author(name=f"{ctx.author.name}", icon_url=f"{ctx.author.avatar_url}")
    em.add_field(name="General", value= f"```css\nPing -- {round(client.latency*1000)} ms\nUptime -- {uptime2}\nPython Version -- {pythonVersion}\nPycord Version -- {dpyVer}\nTotal Servers -- {servercount}\nTotal Members -- {membercount}\nBot Version -- v{ver}```", inline=True)
    em.add_field(name = "Team", value = "```css\n\n\n\n\nOwner/Developer\n‚Ä¢ Leimag#0001\nIdea\n‚Ä¢ Chris_0x84#8945```",inline=True)
    em.add_field(name = "Statistics", value = f"```css\nOS -- {osname}\nCPU -- {cpuname}\nCPU Cores -- {cpucores} Cores\nCPU Usage -- {cpupercent}%\nRAM -- {mem_total:,.0f} MB \nRAM Usage -- {bruh} MB / {mem_total:,.0f} MB ({mem_of_total:.0f}%)```", inline=False)
    print(cpuname)
    await ctx.send(embed=em)



with open('token.json') as f:
    token = json.load(f)
token = token.get('token') 

client.run(token)
